package cimeroEditor.standardGeneration;

import com.bull.cimero.pluginEditor.generator.serviceMixGenerator.model.standardModel.*;
import com.bull.cimero.pluginEditor.generator.serviceMixGenerator.model.global.*;
import com.bull.cimero.pluginEditor.generator.serviceMixGenerator.model.global.standardJBIClassImplementation.*;

public class standard
{
  protected static String nl;
  public static synchronized standard create(String lineSeparator)
  {
    nl = lineSeparator;
    standard result = new standard();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "<?xml version=\"1.0\"?>" + NL + "" + NL + "<!--" + NL + "############################################################" + NL + "    Generated by CimeroEditor" + NL + " \tBull S. A. S., Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois" + NL + "############################################################" + NL + "-->" + NL + "" + NL + "" + NL + "<beans ";
  protected final String TEXT_2 = "xmlns:";
  protected final String TEXT_3 = "=\"";
  protected final String TEXT_4 = "\"" + NL + "\t\t";
  protected final String TEXT_5 = ">";
  protected final String TEXT_6 = " ";
  protected final String TEXT_7 = "\t\t\t\t<";
  protected final String TEXT_8 = ":endpoint" + NL + "\t\t\t\t\tdefaultMep=\"";
  protected final String TEXT_9 = "\"" + NL + "\t\t\t\t\tservice=\"";
  protected final String TEXT_10 = ":";
  protected final String TEXT_11 = "\"" + NL + "\t\t\t\t\tendpoint=\"";
  protected final String TEXT_12 = "\"" + NL + "\t\t\t\t\trole=\"";
  protected final String TEXT_13 = "\"" + NL + "\t\t\t\t\tlocationURI=\"";
  protected final String TEXT_14 = "\"" + NL + "\t\t\t\t\tsoap=\"";
  protected final String TEXT_15 = "true";
  protected final String TEXT_16 = "false";
  protected final String TEXT_17 = "\">" + NL + "\t\t\t\t</";
  protected final String TEXT_18 = ":endpoint>";
  protected final String TEXT_19 = " ";
  protected final String TEXT_20 = "\t\t\t\t<";
  protected final String TEXT_21 = ":wire-tap service=\"";
  protected final String TEXT_22 = ":";
  protected final String TEXT_23 = "\" endpoint=\"";
  protected final String TEXT_24 = "\">" + NL + "\t\t\t\t\t<";
  protected final String TEXT_25 = ":target>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_26 = ":exchange-target service=\"";
  protected final String TEXT_27 = ":";
  protected final String TEXT_28 = "\"/>" + NL + "\t\t\t\t\t</";
  protected final String TEXT_29 = ":target>" + NL + "\t\t\t\t\t<";
  protected final String TEXT_30 = ":inListener>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_31 = ":exchange-target service=\"";
  protected final String TEXT_32 = ":";
  protected final String TEXT_33 = "\"/>" + NL + "\t\t\t\t\t</";
  protected final String TEXT_34 = ":inListener>" + NL + "\t\t\t\t</";
  protected final String TEXT_35 = ":wire-tap>";
  protected final String TEXT_36 = " ";
  protected final String TEXT_37 = "\t\t\t\t<";
  protected final String TEXT_38 = ":pipeline service=\"";
  protected final String TEXT_39 = ":";
  protected final String TEXT_40 = "\" endpoint=\"";
  protected final String TEXT_41 = "\">" + NL + "\t\t\t\t\t<";
  protected final String TEXT_42 = ":transformer>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_43 = ":exchange-target service=\"";
  protected final String TEXT_44 = ":";
  protected final String TEXT_45 = "\"/>" + NL + "\t\t\t\t\t</";
  protected final String TEXT_46 = ":transformer>" + NL + "\t\t\t\t\t<";
  protected final String TEXT_47 = ":target>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_48 = ":exchange-target service=\"";
  protected final String TEXT_49 = ":";
  protected final String TEXT_50 = "\"/>" + NL + "\t\t\t\t\t</";
  protected final String TEXT_51 = ":target>" + NL + "\t\t\t\t</";
  protected final String TEXT_52 = ":pipeline>";
  protected final String TEXT_53 = " ";
  protected final String TEXT_54 = "\t\t\t\t<";
  protected final String TEXT_55 = ":xpath-splitter service=\"";
  protected final String TEXT_56 = ":";
  protected final String TEXT_57 = "\" endpoint=\"";
  protected final String TEXT_58 = "\"" + NL + "\t\t\t\t\txpath=\"";
  protected final String TEXT_59 = "\">" + NL + "\t\t\t\t\t<";
  protected final String TEXT_60 = ":target>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_61 = ":exchange-target service=\"";
  protected final String TEXT_62 = ":";
  protected final String TEXT_63 = "\"/>" + NL + "\t\t\t\t\t</";
  protected final String TEXT_64 = ":target>" + NL + "\t\t\t\t</";
  protected final String TEXT_65 = ":xpath-splitter>";
  protected final String TEXT_66 = " ";
  protected final String TEXT_67 = "\t\t\t\t<";
  protected final String TEXT_68 = ":split-aggregator service=\"";
  protected final String TEXT_69 = ":";
  protected final String TEXT_70 = "\" endpoint=\"";
  protected final String TEXT_71 = "\">" + NL + "\t\t\t\t\t<";
  protected final String TEXT_72 = ":target>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_73 = ":exchange-target service=\"";
  protected final String TEXT_74 = ":";
  protected final String TEXT_75 = "\"/>" + NL + "\t\t\t\t\t</";
  protected final String TEXT_76 = ":target>" + NL + "\t\t\t\t</";
  protected final String TEXT_77 = ":split-aggregator>";
  protected final String TEXT_78 = " ";
  protected final String TEXT_79 = "\t\t\t\t<";
  protected final String TEXT_80 = ":endpoint" + NL + "\t\t\t\t\tservice=\"";
  protected final String TEXT_81 = ":";
  protected final String TEXT_82 = "\"" + NL + "\t\t\t\t\tendpoint=\"";
  protected final String TEXT_83 = "\"" + NL;
  protected final String TEXT_84 = "\t\t\t\t\ttargetService=\"";
  protected final String TEXT_85 = ":";
  protected final String TEXT_86 = "\"" + NL + "\t\t\t\t\ttargetEndpoint=\"";
  protected final String TEXT_87 = "\"" + NL;
  protected final String TEXT_88 = "\t\t\t\t\trole=\"";
  protected final String TEXT_89 = "\"" + NL + "\t\t\t\t\tdefaultMep=\"";
  protected final String TEXT_90 = "\"" + NL + "\t\t\t\t\tdestinationStyle=\"";
  protected final String TEXT_91 = "\"" + NL + "\t\t\t\t\tjmsProviderDestinationName=\"";
  protected final String TEXT_92 = "\"" + NL + "\t\t\t\t\tjndiConnectionFactoryName=\"";
  protected final String TEXT_93 = "\">" + NL + "\t\t\t\t</";
  protected final String TEXT_94 = ":endpoint>";
  protected final String TEXT_95 = " ";
  protected final String TEXT_96 = "\t\t\t\t<";
  protected final String TEXT_97 = ":message-filter service=\"";
  protected final String TEXT_98 = ":";
  protected final String TEXT_99 = "\" endpoint=\"";
  protected final String TEXT_100 = "\">" + NL + "\t\t\t\t\t<";
  protected final String TEXT_101 = ":target>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_102 = ":exchange-target service=\"";
  protected final String TEXT_103 = ":";
  protected final String TEXT_104 = "\"/>" + NL + "\t\t\t\t\t</";
  protected final String TEXT_105 = ":target>" + NL + "\t\t\t\t\t<";
  protected final String TEXT_106 = ":filter>" + NL + "\t\t\t\t\t\t<";
  protected final String TEXT_107 = ":xpath-predicate xpath=\"";
  protected final String TEXT_108 = "\"/>" + NL + "\t\t\t\t    </";
  protected final String TEXT_109 = ":filter>" + NL + "\t\t\t\t</";
  protected final String TEXT_110 = ":message-filter>" + NL;
  protected final String TEXT_111 = NL + "</beans>";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
     StandardJBIJARClass monStd = (StandardJBIJARClass) argument;
    stringBuffer.append(TEXT_1);
    
		for (int i = 0; i < monStd.getNamespaceClass().size(); i++) {
			NameSpaceClass nms = (NameSpaceClass) monStd.getNamespaceClass().get(i);
			
    stringBuffer.append(TEXT_2);
    stringBuffer.append(nms.getNameSpaceName());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(nms.getNameSpaceValue());
    stringBuffer.append(TEXT_4);
       	}

    stringBuffer.append(TEXT_5);
    	for (int i = 0 ; i < monStd.getJbiCompo().size(); i++) {
		StandardJBIClass myJBI = (StandardJBIClass) monStd.getJbiCompo().get(i);

     if (myJBI instanceof StandardHttpClass) {
					StandardHttpClass myHttp = (StandardHttpClass) myJBI;

    stringBuffer.append(TEXT_6);
    stringBuffer.append(TEXT_7);
    stringBuffer.append(myHttp.getNamespaceRef().getNameSpaceName());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(myHttp.getDefaultMepValue());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(myHttp.getServiceNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_10);
    stringBuffer.append(myHttp.getServiceName());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(myHttp.getEndpointValue());
    stringBuffer.append(TEXT_12);
    stringBuffer.append(myHttp.getProviderRole());
    stringBuffer.append(TEXT_13);
    stringBuffer.append(myHttp.getLocationURI());
    stringBuffer.append(TEXT_14);
    
					if (myHttp.isSoap()) {
						
    stringBuffer.append(TEXT_15);
    
					} else {
						
    stringBuffer.append(TEXT_16);
    
					}
    stringBuffer.append(TEXT_17);
    stringBuffer.append(myHttp.getNamespaceRef().getNameSpaceName());
    stringBuffer.append(TEXT_18);
    
				} else if (myJBI instanceof StandardEIPWireTap) {
					StandardEIPWireTap myWT = (StandardEIPWireTap) myJBI;

    stringBuffer.append(TEXT_19);
    			String nmsWTName = myWT.getNamespaceRef().getNameSpaceName();

    stringBuffer.append(TEXT_20);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_21);
    stringBuffer.append(myWT.getServiceNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_22);
    stringBuffer.append(myWT.getServiceName());
    stringBuffer.append(TEXT_23);
    stringBuffer.append(myWT.getEndpointValue());
    stringBuffer.append(TEXT_24);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_25);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_26);
    stringBuffer.append(myWT.getTargetNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_27);
    stringBuffer.append(myWT.getTargetName());
    stringBuffer.append(TEXT_28);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_29);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_30);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_31);
    stringBuffer.append(myWT.getListenerNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_32);
    stringBuffer.append(myWT.getListenerName());
    stringBuffer.append(TEXT_33);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_34);
    stringBuffer.append(nmsWTName);
    stringBuffer.append(TEXT_35);
    
				} else if (myJBI instanceof StandardEIPPipelineClass) {
					StandardEIPPipelineClass myPipeline = (StandardEIPPipelineClass) myJBI;

    stringBuffer.append(TEXT_36);
    			String nmsPipelineName = myPipeline.getNamespaceRef().getNameSpaceName();

    stringBuffer.append(TEXT_37);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_38);
    stringBuffer.append(myPipeline.getServiceNameSpace().getNameSpaceName());
    stringBuffer.append(TEXT_39);
    stringBuffer.append(myPipeline.getServiceName());
    stringBuffer.append(TEXT_40);
    stringBuffer.append(myPipeline.getEndpoint());
    stringBuffer.append(TEXT_41);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_42);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_43);
    stringBuffer.append(myPipeline.getTrsfNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_44);
    stringBuffer.append(myPipeline.getTransformeurServiceName());
    stringBuffer.append(TEXT_45);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_46);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_47);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_48);
    stringBuffer.append(myPipeline.getTargetNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_49);
    stringBuffer.append(myPipeline.getTargetServiceName());
    stringBuffer.append(TEXT_50);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_51);
    stringBuffer.append(nmsPipelineName);
    stringBuffer.append(TEXT_52);
    
				} else if (myJBI instanceof StandardEIPSplitter) {
					StandardEIPSplitter mySplitter = (StandardEIPSplitter) myJBI;

    stringBuffer.append(TEXT_53);
    			String nmsSplitterName = mySplitter.getNamespaceRef().getNameSpaceName();

    stringBuffer.append(TEXT_54);
    stringBuffer.append(nmsSplitterName);
    stringBuffer.append(TEXT_55);
    stringBuffer.append(mySplitter.getServiceNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_56);
    stringBuffer.append(mySplitter.getServiceName());
    stringBuffer.append(TEXT_57);
    stringBuffer.append(mySplitter.getEndpointValue());
    stringBuffer.append(TEXT_58);
    stringBuffer.append(mySplitter.getXPathRule());
    stringBuffer.append(TEXT_59);
    stringBuffer.append(nmsSplitterName);
    stringBuffer.append(TEXT_60);
    stringBuffer.append(nmsSplitterName);
    stringBuffer.append(TEXT_61);
    stringBuffer.append(mySplitter.getTargetNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_62);
    stringBuffer.append(mySplitter.getTargetName());
    stringBuffer.append(TEXT_63);
    stringBuffer.append(nmsSplitterName);
    stringBuffer.append(TEXT_64);
    stringBuffer.append(nmsSplitterName);
    stringBuffer.append(TEXT_65);
    
				} else if (myJBI instanceof StandardEIPAggregator) {
					StandardEIPAggregator myAggreg = (StandardEIPAggregator) myJBI;

    stringBuffer.append(TEXT_66);
    			String nmsAggregName = myAggreg.getNamespaceRef().getNameSpaceName();

    stringBuffer.append(TEXT_67);
    stringBuffer.append(nmsAggregName);
    stringBuffer.append(TEXT_68);
    stringBuffer.append(myAggreg.getServiceNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_69);
    stringBuffer.append(myAggreg.getServiceName());
    stringBuffer.append(TEXT_70);
    stringBuffer.append(myAggreg.getEndpointValue());
    stringBuffer.append(TEXT_71);
    stringBuffer.append(nmsAggregName);
    stringBuffer.append(TEXT_72);
    stringBuffer.append(nmsAggregName);
    stringBuffer.append(TEXT_73);
    stringBuffer.append(myAggreg.getTargetNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_74);
    stringBuffer.append(myAggreg.getTargetName());
    stringBuffer.append(TEXT_75);
    stringBuffer.append(nmsAggregName);
    stringBuffer.append(TEXT_76);
    stringBuffer.append(nmsAggregName);
    stringBuffer.append(TEXT_77);
    
				} else if (myJBI instanceof StandardJMSClass) {
					StandardJMSClass myJMS = (StandardJMSClass) myJBI;

    stringBuffer.append(TEXT_78);
    stringBuffer.append(TEXT_79);
    stringBuffer.append(myJMS.getNamespaceRef().getNameSpaceName());
    stringBuffer.append(TEXT_80);
    stringBuffer.append(myJMS.getServiceNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_81);
    stringBuffer.append(myJMS.getServiceName());
    stringBuffer.append(TEXT_82);
    stringBuffer.append(myJMS.getEndpointValue());
    stringBuffer.append(TEXT_83);
    					if (myJMS.getTargetServiceName() != null) {

    stringBuffer.append(TEXT_84);
    stringBuffer.append(myJMS.getTargetServiceNms().getNameSpaceName());
    stringBuffer.append(TEXT_85);
    stringBuffer.append(myJMS.getTargetServiceName());
    stringBuffer.append(TEXT_86);
    stringBuffer.append(myJMS.getTargetServiceName());
    stringBuffer.append(TEXT_87);
    					}

    stringBuffer.append(TEXT_88);
    stringBuffer.append(myJMS.getRole());
    stringBuffer.append(TEXT_89);
    stringBuffer.append(myJMS.getDefaultMepValue());
    stringBuffer.append(TEXT_90);
    stringBuffer.append(myJMS.getDestinationStyle());
    stringBuffer.append(TEXT_91);
    stringBuffer.append(myJMS.getJMSProviderDestinationName());
    stringBuffer.append(TEXT_92);
    stringBuffer.append(myJMS.getJndiConnectionFactoryName());
    stringBuffer.append(TEXT_93);
    stringBuffer.append(myJMS.getNamespaceRef().getNameSpaceName());
    stringBuffer.append(TEXT_94);
    
				} else if (myJBI instanceof StandardEIPMessageFilter) {
					StandardEIPMessageFilter myMessageFilter = (StandardEIPMessageFilter) myJBI;

    stringBuffer.append(TEXT_95);
    			String nmsMessageFilterName = myMessageFilter.getNamespaceRef().getNameSpaceName();

    stringBuffer.append(TEXT_96);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_97);
    stringBuffer.append(myMessageFilter.getServiceNameSpace().getNameSpaceName());
    stringBuffer.append(TEXT_98);
    stringBuffer.append(myMessageFilter.getServiceName());
    stringBuffer.append(TEXT_99);
    stringBuffer.append(myMessageFilter.getEndpoint());
    stringBuffer.append(TEXT_100);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_101);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_102);
    stringBuffer.append(myMessageFilter.getTargetNamespace().getNameSpaceName());
    stringBuffer.append(TEXT_103);
    stringBuffer.append(myMessageFilter.getTargetName());
    stringBuffer.append(TEXT_104);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_105);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_106);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_107);
    stringBuffer.append(myMessageFilter.getXpathRule());
    stringBuffer.append(TEXT_108);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_109);
    stringBuffer.append(nmsMessageFilterName);
    stringBuffer.append(TEXT_110);
    
					} 
    

}
    stringBuffer.append(TEXT_111);
    return stringBuffer.toString();
  }
}
